{
  "hash": "f8b3cc32cb2e60d972e8147735cee5de",
  "result": {
    "markdown": "---\ntitle: \"Automated Machine Learning with H20 (I)\"\nauthor: \"Sarvenaz Mostafazadeh\"\n---\n\n# Compensation Features:\n\nWhat can you deduce about the interaction between Monthly Income and Attrition?\n\nAnswer: Those that are leaving have a lower Monthly Income\n\n# Compensation Features:\n\nWhat can you deduce about the interaction between Percent Salary Hike and Attrition?\n\nAnswer: It’s difficult to deduce anything based on the visualization\n\n# Compensation Features:\n\nWhat can you deduce about the interaction between Stock Option Level and Attrition?\n\nAnswer: Those that are staying have a higher stock option level\n\n# Survey Results\n\nWhat can you deduce about the interaction between Environment Satisfaction and Attrition?\n\nAnswer: A higher proportion of those leaving have a low environment satisfaction level\n\n# Survey Results\n\nWhat can you deduce about the interaction between Work Life Balance and Attrition?\n\nAnswer: Those that are staying have a higher density of 2’s and 3’s\n\n# Performance Data\n\nWhat Can you deduce about the interaction between Job Involvement and Attrition?\n\nAnswer: Those that are leaving have a lower density of 3’s and 4’s\n\n# Work-Life Features\n\nWhat can you deduce about the interaction between Over Time and Attrition?\n\nAnswer: The proportion of those staying that are working Over Time are high compared to those that are not staying\n\n# Training and Education\n\nWhat can you deduce about the interaction between Training Times Last Year and Attrition\n\nAnswer: People that leave tend to have less annual training\n\n# Time-Based Features\n\nWhat can you deduce about the interaction between Years At Company and Attrition\n\nAnswer: People that leave tend to have less working years at the company\n\n# Time-Based Features\n\nWhat can you deduce about the interaction between Years Since Last Promotion and Attrition?\n\nAnswer: It’s difficult to deduce anything based on the visualization\n\n# code\n\n\n::: {.cell hash='03_Automated_Machine_Learning_with_H20_-I-_cache/html/plot_bf11f49a97a7e7ed29bc239d8a1db33a'}\n\n```{.r .cell-code}\n##----.libraries----\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(skimr)\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Registered S3 method overwritten by 'GGally':\n#>   method from   \n#>   +.gg   ggplot2\n```\n:::\n\n```{.r .cell-code}\n##----.Load data-----\nemployee_attrition_tbl <- read_csv(\"C:/Users/mosta/Desktop/Business Decisions with Machine Learning/3/datasets-1067-1925-WA_Fn-UseC_-HR-Employee-Attrition.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 1470 Columns: 35\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (9): Attrition, BusinessTravel, Department, EducationField, Gender, Job...\n#> dbl (26): Age, DailyRate, DistanceFromHome, Education, EmployeeCount, Employ...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ndept_job_role_tbl <- employee_attrition_tbl %>%\nselect(EmployeeNumber, Department, JobRole, PerformanceRating, Attrition)\n\n##----.Function to convert counts to percentages---- \ncount_to_pct <- function(data, ..., col = n) {\n  \n  # capture the dots\n  grouping_vars_expr <- quos(...)\n  col_expr <- enquo(col)\n  \n  ret <- data %>%\n    group_by(!!! grouping_vars_expr) %>%\n    mutate(pct = (!! col_expr) / sum(!! col_expr)) %>%\n    ungroup()\n  \n  return(ret)\n  \n}\n\n\n##----.Develop KPI function----\n\nassess_attrition <- function(data, attrition_col, attrition_value, baseline_pct) {\n  \n  attrition_col_expr <- enquo(attrition_col)\n  \n  data %>%\n    \n    # Use parenthesis () to give tidy eval evaluation priority\n    filter((!! attrition_col_expr) %in% attrition_value) %>%\n    arrange(desc(pct)) %>%\n    mutate(\n      # Function inputs in numeric format\n      above_industry_avg = case_when(\n        pct > baseline_pct ~ \"Yes\",\n        TRUE ~ \"No\"\n      )\n    )\n  \n}\n\n\n##----.Function to calculate attrition cost----\ncalculate_attrition_cost <- function(\n    \n  # Employee\n  n                    = 1,\n  salary               = 80000,\n  \n  # Direct Costs\n  separation_cost      = 500,\n  vacancy_cost         = 10000,\n  acquisition_cost     = 4900,\n  placement_cost       = 3500,\n  \n  # Productivity Costs\n  net_revenue_per_employee = 250000,\n  workdays_per_year        = 240,\n  workdays_position_open   = 40,\n  workdays_onboarding      = 60,\n  onboarding_efficiency    = 0.50\n  \n) {\n  \n  # Direct Costs\n  direct_cost <- sum(separation_cost, vacancy_cost, acquisition_cost, placement_cost)\n  \n  # Lost Productivity Costs\n  productivity_cost <- net_revenue_per_employee / workdays_per_year *\n    (workdays_position_open + workdays_onboarding * onboarding_efficiency)\n  \n  # Savings of Salary & Benefits (Cost Reduction)\n  salary_benefit_reduction <- salary / workdays_per_year * workdays_position_open\n  \n  # Estimated Turnover Per Employee\n  cost_per_employee <- direct_cost + productivity_cost - salary_benefit_reduction\n  \n  # Total Cost of Employee Turnover\n  total_cost <- n * cost_per_employee\n  \n  return(total_cost)\n  \n}\n\n\n##----.Function to plot attrition----\nplot_attrition <- function(data, \n                           ..., \n                           .value,\n                           fct_reorder = TRUE,\n                           fct_rev     = FALSE,\n                           include_lbl = TRUE,\n                           color       = \"#2dc6d6\",\n                           units       = c(\"0\", \"K\", \"M\")) {\n  \n  ### Inputs\n  group_vars_expr   <- quos(...)\n  \n  # If the user does not supply anything, \n  # this takes the first column of the supplied data\n  if (length(group_vars_expr) == 0) {\n    group_vars_expr <- quos(rlang::sym(colnames(data)[[1]]))\n  }\n  \n  value_expr <- enquo(.value)\n  \n  units_val  <- switch(units[[1]],\n                       \"M\" = 1e6,\n                       \"K\" = 1e3,\n                       \"0\" = 1)\n  if (units[[1]] == \"0\") units <- \"\"\n  \n  # Data Manipulation\n  # This is a so called Function Factory (a function that produces a function)\n  usd <- scales::dollar_format(prefix = \"$\", largest_with_cents = 1e3)\n  \n  # Create the axis labels and values for the plot\n  data_manipulated <- data %>%\n    mutate(name = str_c(!!! group_vars_expr, sep = \": \") %>% as_factor()) %>%\n    mutate(value_text = str_c(usd(!! value_expr / units_val),\n                              units[[1]], sep = \"\"))\n  \n  \n  # Order the labels on the y-axis according to the input\n  if (fct_reorder) {\n    data_manipulated <- data_manipulated %>%\n      mutate(name = forcats::fct_reorder(name, !! value_expr)) %>%\n      arrange(name)\n  }\n  \n  if (fct_rev) {\n    data_manipulated <- data_manipulated %>%\n      mutate(name = forcats::fct_rev(name)) %>%\n      arrange(name)\n  }\n  \n\n##----.Visualization----\n  \n  g <- data_manipulated %>%\n    \n    # \"name\" is a column name generated by our function internally as part of the data manipulation task\n    ggplot(aes(x = (!! value_expr), y = name)) +\n    geom_segment(aes(xend = 0, yend = name), color = color) +\n    geom_point(aes(size = !! value_expr), color = color) +\n    scale_x_continuous(labels = scales::dollar) +\n    scale_size(range = c(3, 5)) +\n    theme(legend.position = \"none\")\n  \n  # Plot labels if TRUE\n  if (include_lbl) {\n    g <- g +\n      geom_label(aes(label = value_text, size = !! value_expr),\n                 hjust = \"inward\", color = color)\n  }\n  \n  return(g)\n}\n\n##----.calculations----\nattrition_cost_df <- dept_job_role_tbl %>%\n  count(Department, JobRole, Attrition) %>%\n  count_to_pct(Department, JobRole)  %>%  \n  assess_attrition(Attrition, attrition_value = \"Yes\", baseline_pct = 0.088) %>%\n  mutate(\n    cost_of_attrition = calculate_attrition_cost(n = n, salary = 80000)\n  ) %>%\n  # Select columnns\n  plot_attrition(Department, JobRole, .value = cost_of_attrition,\n                 units = \"M\") +\n  labs(\n    title = \"Estimated Cost of Attrition by Job Role\",\n    x = \"Cost of Attrition\",\n    subtitle = \"Looks like Sales Executive and Labaratory Technician are the biggest drivers of cost\"\n  )\n  \n\n\n##----.Custom plotting function----\n\ndata <- employee_attrition_tbl %>%\n  select(Attrition, Age, Gender, MaritalStatus, NumCompaniesWorked, Over18, DistanceFromHome)\n\nplot_ggpairs <- function(data, color = NULL, density_alpha = 0.5) {\n  \n  color_expr <- enquo(color)\n  \n  if (rlang::quo_is_null(color_expr)) {\n    \n    g <- data %>%\n      ggpairs(lower = \"blank\") \n    \n  } else {\n    \n    color_name <- quo_name(color_expr)\n    \n    g <- data %>%\n      ggpairs(mapping = aes_string(color = color_name), \n              lower = \"blank\", legend = 1,\n              diag = list(continuous = wrap(\"densityDiag\", \n                                            alpha = density_alpha))) +\n      theme(legend.position = \"bottom\")\n  }\n  \n  return(g)\n  \n}\n\nemployee_attrition_tbl %>%\n  select(Attrition, Age, Gender, MaritalStatus, NumCompaniesWorked, Over18, DistanceFromHome) %>%\n  plot_ggpairs(color = Attrition)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: `aes_string()` was deprecated in ggplot2 3.0.0.\n#> ℹ Please use tidy evaluation idioms with `aes()`.\n#> ℹ See also `vignette(\"ggplot2-in-packages\")` for more information.\n```\n:::\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-1.png){width=960}\n:::\n\n```{.r .cell-code}\n##----.Explore Features by Category----\n\n#   1. Descriptive features: age, gender, marital status \nemployee_attrition_tbl %>%\n  select(Attrition, Age, Gender, MaritalStatus, NumCompaniesWorked, Over18, DistanceFromHome) %>%\n  plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-2.png){width=960}\n:::\n\n```{.r .cell-code}\n#   2. Employment features: department, job role, job level\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"employee\"), contains(\"department\"), contains(\"job\")) %>%\n  plot_ggpairs(Attrition) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in cor(x, y): the standard deviation is zero\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n\n#> Warning in cor(x, y): the standard deviation is zero\n```\n:::\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-3.png){width=960}\n:::\n\n```{.r .cell-code}\n#   3. Compensation features: HourlyRate, MonthlyIncome, StockOptionLevel \nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"income\"), contains(\"rate\"), contains(\"salary\"), contains(\"stock\")) %>%\n  plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-4.png){width=960}\n:::\n\n```{.r .cell-code}\n#   4. Survey Results: Satisfaction level, WorkLifeBalance \nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"satisfaction\"), contains(\"life\")) %>%\n  plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-5.png){width=960}\n:::\n\n```{.r .cell-code}\n#   5. Performance Data: Job Involvement, Performance Rating\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"performance\"), contains(\"involvement\")) %>%\n  plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-6.png){width=960}\n:::\n\n```{.r .cell-code}\n#   6. Work-Life Features \nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"overtime\"), contains(\"travel\")) %>%\n  plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-7.png){width=960}\n:::\n\n```{.r .cell-code}\n#   7. Training and Education \nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"training\"), contains(\"education\")) %>%\n  plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-8.png){width=960}\n:::\n\n```{.r .cell-code}\n#   8. Time-Based Features: Years at company, years in current role\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"years\")) %>%\n  plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_Automated_Machine_Learning_with_H20_-I-_files/figure-html/plot-9.png){width=960}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}